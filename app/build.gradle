plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.wind.storm.bypass"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }

        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments '-DANDROID_STL=c++_shared'
                if (rootProject.ext.sampleDependentOnLocalLibrary) {
                    arguments "-DDEPENDENT_ON_LOCAL_LIBRARY=ON"
                }
            }
        }

    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    if (!rootProject.ext.sampleDependentOnLocalLibrary) {
        buildFeatures {
            prefab true
        }
    }
    packagingOptions {
        pickFirst '**/libeasyBypass.so'
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    if (rootProject.ext.sampleDependentOnLocalLibrary) {
        implementation project(':easyBypass')
    } else {
        implementation 'io.github.windysha:EasyBypassRestriction:1.0.1'
    }
}

if (rootProject.ext.sampleDependentOnLocalLibrary) {
    tasks.whenTaskAdded { task ->
        if (task.name.startsWith('buildCMakeDebug')) {
            task.dependsOn(':easyBypass:mergeDebugNativeLibs')
        } else if (task.name.startsWith('buildCMakeRelWithDebInfo')) {
            task.dependsOn(':easyBypass:stripReleaseDebugSymbols')
        }
    }
}